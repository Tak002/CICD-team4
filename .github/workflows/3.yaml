name: team4

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # SonarCloud 분석에 필요

      #########################
      # CMake Build & GTest
      #########################
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake lcov
      
      - name: Install Build Wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      - name: Clean build dir
        run: |
          rm -rf build

      - name: Configure CMake, Build with CMake
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage"
          
      - name: Run Build Wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir build_wrapper_output_directory cmake --build build --config Debug

      - name: Run GoogleTest
        run: |
          cd build
          ctest --output-on-failure

      - name: Generate coverage report
        run: |
          
          lcov --directory build/ --capture --output-file coverage.info --ignore-errors mismatch
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          sed -i 's|/home/runner/work/CICD-team4/CICD-team4/||g' coverage.info
          cat coverage.info | grep SF

      - name: Upload coverage to SonarCloud with log capture
        run: |
          sonar-scanner 
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} 
            -Dsonar.projectKey=Tak002_CICD-team4
            -Dsonar.organization=tak002
            -Dsonar.cfamily.gcov.reportsPath=build/
            -Dsonar.cxx.coverage.reportPath=coverage.info
            -Dsonar.cfamily.compile-commands=build_wrapper_output_directory/compile_commands.json
            | tee sonar_log.txt

      - name: Check SonarScanner logs for coverage/gcov    
        run:
          grep -i "cover" sonar_log.txt || echo "No 'cover' found"
          grep -i "gcov" sonar_log.txt || echo "No 'gcov' found"

     # 빌드 성공 시 Discord 알림
      - name: Discord Success Notification
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: '✅ **빌드 성공**: ${{ github.repository }} - ${{ github.workflow }} 워크플로우 성공!'

      # 빌드 실패 시 Discord 알림
      - name: Discord Failure Notification
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: '❌ **빌드 실패**: ${{ github.repository }} - ${{ github.workflow }} 워크플로우 실패! 확인 필요!'
